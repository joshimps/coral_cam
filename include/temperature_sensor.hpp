#include "rclcpp/rclcpp.hpp"
#include "std_msgs/msg/string.hpp"

#include <string>
#include <chrono>
#include <stdexcept>
#include <bits/stdc++.h> 

using namespace std::chrono_literals;


namespace coral_cam
{
    class TemperatureSensor : public rclcpp::Node
    {
    public:
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Constructors and Destructors                                                                          //
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        TemperatureSensor(const rclcpp::NodeOptions &options);
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Public Methods                                                                                        //
        //////////////////////////////////////////////////////////////////////////////////////////////////////////

    private:
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Callbacks                                                                                             //
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        void ReadCurrentTemperature();
       
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Private Methods                                                                                       //
        //////////////////////////////////////////////////////////////////////////////////////////////////////////

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Node,Timers, Publishers and Subscribers                                                               //
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        rclcpp::Publisher<std_msgs::msg::String>::SharedPtr current_temperature_publisher_;
        rclcpp::TimerBase::SharedPtr timer_;

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Constants                                                                                             //
        //////////////////////////////////////////////////////////////////////////////////////////////////////////

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Variables                                                                                             //
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        std::string current_temperature_string_;
        int current_temperature_;
        int cutoff_temperature_;

    };
}